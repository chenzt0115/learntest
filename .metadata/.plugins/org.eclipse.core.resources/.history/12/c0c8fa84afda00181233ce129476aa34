package com.test.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFDataFormat;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class MerageExcel {
	/** 总行数 */
    private int totalRows = 0;
    private Map<String, Integer> ywlshIndex = null;
    
	public void merage(String fname1, String fname2, String destname){
		writeone(fname1, destname);
		writetwo(fname2, destname);
	}
	
	private void writetwo(String fname2, String destname){
		// 声明一个工作薄
		InputStream is = null;
    	FileOutputStream outStream = null;
        try
        {
        	ImportExecl importer = new ImportExecl();
    		Workbook wb = (Workbook) importer.read(fname2, "2");
    		if(null == wb){
    			return;
    		}
    		
    		/** 得到第一个shell */
            Sheet sheet = wb.getSheetAt(0);
            /** 得到Excel的行数 */
            this.totalRows = sheet.getPhysicalNumberOfRows();
    		
    		 /** 调用本类提供的根据流读取的方法 */
            File file = new File(destname);
            is = new FileInputStream(file);
            
            /** 根据版本选择创建Workbook的方式 */
            Workbook  modifywb = new XSSFWorkbook(is);
            ModifyExcel modifyer = new ModifyExcel();
            
            /** 循环Excel的行 */
            for (int r = 0; r < this.totalRows; r++)
            {
                Row row = sheet.getRow(r);
                if (row == null)
                {
                    continue;
                }
                
                String ywlsh = row.getCell(0).getStringCellValue();
                if(!ywlshIndex.containsKey(ywlsh)){
                	continue;
                }
                int idx = ywlshIndex.remove(ywlsh);
                
                String lcdm = row.getCell(1).getStringCellValue();
                modifyer.modify(modifywb, idx, 1, lcdm);
            }
            
            is.close();
            
            //文件输出流
            outStream = new FileOutputStream(file);
            modifywb.write(outStream);
            outStream.flush();
            outStream.close();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }finally
        {
            if (is != null)
            {
                try
                {
                    is.close();
                }
                catch (IOException e)
                {
                    is = null;
                    e.printStackTrace();
                }
            }
            if (outStream != null)
            {
                try
                {
                	outStream.close();
                }
                catch (IOException e)
                {
                	outStream = null;
                    e.printStackTrace();
                }
            }
        }
	}
	
	private void writeone(String fname1, String destname){
		// 声明一个工作薄
        XSSFWorkbook newworkBook = new XSSFWorkbook();
        FileOutputStream outStream = null;
        try {
    		XSSFSheet newsheet = newworkBook.createSheet();
    		newworkBook.setSheetName(0,"info");
            XSSFCellStyle cellStyle = newworkBook.createCellStyle();
            XSSFDataFormat format = newworkBook.createDataFormat();
            cellStyle.setDataFormat(format.getFormat("@"));
            
            ImportExecl importer = new ImportExecl();
    		Workbook wb = (Workbook) importer.read(fname1, "2");
    		if(null == wb){
    			return;
    		}
    		
    		ywlshIndex = new HashMap<String, Integer>();
    		
            /** 得到第一个shell */
            Sheet sheet = wb.getSheetAt(0);

            /** 得到Excel的行数 */
            this.totalRows = sheet.getPhysicalNumberOfRows();
            
            /** 循环Excel的行 */
            for (int r = 0; r < this.totalRows; r++)
            {
                Row row = sheet.getRow(r);
                if (row == null)
                {
                    continue;
                }
                
            	String ywlsh = row.getCell(3).getStringCellValue();
            	ywlshIndex.put(ywlsh, r);
            	
            	String bwnr = row.getCell(4).getStringCellValue();
            	String[] bwnrs = bwnr.split(",");
            	
            	XSSFRow newrow = newsheet.createRow(r);
            	XSSFCell cell1 = newrow.createCell(0);
            	cell1.setCellStyle(cellStyle);
            	cell1.setCellValue(ywlsh);
            	
            	XSSFCell cell2 = newrow.createCell(1);
            	cell2.setCellStyle(cellStyle);
            	cell2.setCellValue("lcdm");
            	
            	XSSFCell cell3 = newrow.createCell(2);
            	cell3.setCellStyle(cellStyle);
            	cell3.setCellValue(bwnrs[0]);
            	
            	XSSFCell cell4 = newrow.createCell(3);
            	cell4.setCellStyle(cellStyle);
            	cell4.setCellValue(bwnrs[1]);
            	
            	String col6str = row.getCell(6).getStringCellValue();
            	XSSFCell cell5 = newrow.createCell(4);
            	cell5.setCellStyle(cellStyle);
            	cell5.setCellValue(col6str);
            }
            
            File  file = new File(destname);
            //文件输出流
            outStream = new FileOutputStream(file);
            newworkBook.write(outStream);
            outStream.flush();
            outStream.close();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
        	try {
				outStream.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
        }
	}
	
	public static void main(String[] args) {
		MerageExcel merge  = new MerageExcel();
		merge.merage("E:\\test\\运单.xlsx", "E:\\test\\test.xlsx", "E:\\test\\新文件.xlsx");
	}
}
